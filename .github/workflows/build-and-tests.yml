# Copyright (C) 2023 Andrea Ballestrazzi

name: Builds and Tests

on:
  push:
    branches-ignore:
      - main
# We don't need to run this workflow for branches that
# updates only CI/CD scripts. We ignore those branches.
      - 'CI-UPDATE/**'

env:
  BUILD_TYPE: Release

jobs:
  clang-tidy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup clang-tidy
        run: sudo apt-get install -y clang-tidy

      - name: Retrieve changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            src/**
            test/**
          files_ignore: |
            src/third-party/**
            test/third-party/**
            *.txt

      - name: Compile commands export
        env:
          CC:   gcc-12
          CXX:  g++-12
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -Wno-dev
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -Wno-dev

      - name: Execute clang-tidy
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Parsing file: $file"
            clang-tidy -p ./build/compile_commands.json -checks=-*,cppcoreguidelines-*,clang-analyzer-* $file
          done

  build_matrix:
    needs: clang-tidy
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: CMake Configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -Wno-dev
      env:
        CC:   gcc-12
        CXX:  g++-12

    - name: CMake Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Static Tests Run
      continue-on-error: true
      run: ${{github.workspace}}/bin/test_app --order rand [static]

    - name: Unit Tests Run
      continue-on-error: true
      run: ${{github.workspace}}/bin/test_app --order rand [unit]

    - name: Integration Tests Run
      continue-on-error: true
      run: ${{github.workspace}}/bin/test_app --order rand [integration]

    - name: Functional Tests Run
      continue-on-error: true
      run: ${{github.workspace}}/bin/test_app --order rand [functional]

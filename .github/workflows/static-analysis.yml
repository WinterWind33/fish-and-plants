# Copyright (c) 2023 Andrea Ballestrazzi

name: Static Analysis

on:
  push:
    branches-ignore:
      - main

env:
  BUILD_TYPE: Release

jobs:
  pre-commit-hooks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup pre-commit
        run: sudo apt-get install -y python3-pip

      - name: Install pre-commit
        run: pip3 install pre-commit

      - name: Install pre-commit hooks
        run: pre-commit install

      - name: (RPI_GC) Check changed files
        id: RPI_GC-changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: |
            src/**
            test/**
            .github/**

        # Run the pre-commit hooks only on those files that are
        # changed in the current MR.
      - name: Run pre-commit hooks on production code
        if: steps.RPI_GC-changed-files.outputs.any_changed == 'true'
        run: pre-commit run --files $(git diff --name-only origin/main | grep "src/")

      - name: Run pre-commit hooks on tests
        if: steps.RPI_GC-changed-files.outputs.any_changed == 'true'
        run: pre-commit run --files $(git diff --name-only origin/main | grep "test/")

        # Since pre-commit hooks also check yaml files, we run the job even in
        # the .github folder.
      - name: Run pre-commit hooks on workflow files
        if: steps.RPI_GC-changed-files.outputs.any_changed == 'true'
        run: pre-commit run --files $(git diff --name-only origin/main | grep ".github/")

  clang-tidy:
    needs: pre-commit-hooks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup external dependencies
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          sudo ./bootstrap-vcpkg.sh
          sudo ./vcpkg install ms-gsl catch2 gtest

      - name: Setup clang-tidy
        run: sudo apt-get install -y clang clang-tidy autoconf-archive pkg-config m4 libtool automake autoconf

      - name: Compile commands export
        env:
          CC:   clang
          CXX:  clang++
        run: |
          mkdir build
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -Wno-dev

      - name: Execute clang-tidy on production code
        run: |
          chmod +x ./scripts/static-analyze-files.sh
          ./scripts/static-analyze-files.sh $(git diff --name-only origin/main | grep "src/")
